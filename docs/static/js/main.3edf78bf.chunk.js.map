{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","console","log","loading","state","setstate","useEffect","then","imgs","useFetchGift","datos","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qKAEaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACuCC,UAAUH,GADjD,+DAEEI,MAAOF,GAFT,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAASD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACnC,OACI,sBAAKc,UAAU,2DAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,kCAAMA,EAAN,YCDEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAC1BoB,QAAQC,IAAIrB,GACZ,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WACP1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAAEtB,IAIEuB,EDjBuBK,CAAc5B,GAAhCa,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAEnB,OADAF,QAAQC,IAAIC,GAER,qCACI,mCAAMtB,EAAN,OAGI,qBAAKgB,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAoB,GAAK,OAEb,cAAC,EAAD,eAESA,GADCA,EAAMlB,aEbnCmB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAE,EAAF,CAAcA,cAAkBA,IAChC,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCflC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3edf78bf.chunk.js","sourcesContent":["import  { useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nexport const AddCategory = ( { setCategories } ) =>{\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handleInputChange = ( e ) => { \r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue,...categories] );\r\n            setInputValue('');\r\n        }\r\n    \r\n    \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>            \r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n\r\n} \r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };","export const getGift = async(  category  ) =>{\r\n    const url    = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=TB8gzG4Et6neS8jwBbfMZUfYNdimAR7h`;\r\n    const resp   = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs   = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title, \r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log({gifs});\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n           <img src={ url } alt={title}/>\r\n           <p> { title }  </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGift } from '../hooks/useFetchGifs'\r\n// import { getGift } from '../helpers/getGifs';\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    \r\n    const {data:images,loading} = useFetchGift( category ); \r\n    console.log(loading);\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n           \r\n            {\r\n                <div className=\"card-grid\">            \r\n                        {  \r\n                            images.map( datos => \r\n                                \r\n                                <GifGridItem \r\n                                    key= {datos.id}\r\n                                    { ...datos } \r\n                                />\r\n                            )\r\n                        }                \r\n                </div>\r\n            }\r\n        </>    \r\n    )\r\n}\r\n","// hooks = funcion\r\nimport  { useEffect, useState } from 'react';\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGift = ( category  ) => {\r\n    console.log(category)\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGift( category )\r\n            .then( imgs => {                             \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });                    \r\n                \r\n            })\r\n    }, [ category ] )\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory }     from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            < AddCategory setCategories = { setCategories } />\r\n            <hr/>\r\n          \r\n            <ol>\r\n                { \r\n                    categories.map( category => \r\n                         <GifGrid \r\n                            key={ category } \r\n                            category={ category } />\r\n                    ) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}